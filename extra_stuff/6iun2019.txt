pachet config











acces to tokens



2 tipuri user
	user
	aplicatia

	separatie pentru ca in practica ca acealsi server sa fie folosit la mai multe aplicatii
		cu permisiuni diferite




se adauga o dependinta
	security oauth

http://127.0.0.1:8080/oauth/token?scope=write&grant_type=password&username=john&password=12345




    @Override
    public UserDetailsService userDetailsServiceBean() {
        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();

        UserDetails userDetails = User.withUsername("john")
                .password("12345")
                .authorities("ADMIN")
                .build();

        manager.createUser(userDetails);

        return manager;
    }





http://127.0.0.1:8080/oauth/token?scope=write&grant_type=password&username=user1&password=pass1





JWT pentru token
json web token





{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTk4ODE4MTgsInVzZXJfbmFtZSI6InVzZXIxIiwiYXV0aG9yaXRpZXMiOlsiQURNSU4iXSwianRpIjoiOTc3MGM3OTAtMjQyMy00MzNmLTllM2YtMGJlOGQyZTc0MDA0IiwiY2xpZW50X2lkIjoiYXBsaWNhdGllIiwic2NvcGUiOlsid3JpdGUiXX0.3Or6_5S2MZr9c7G-5YljbwQy8jzc6lJwOzRwUQio2Rg",
    "token_type": "bearer",
    "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJ1c2VyMSIsInNjb3BlIjpbIndyaXRlIl0sImF0aSI6Ijk3NzBjNzkwLTI0MjMtNDMzZi05ZTNmLTBiZThkMmU3NDAwNCIsImV4cCI6MTU2MjQzMDYxOCwiYXV0aG9yaXRpZXMiOlsiQURNSU4iXSwianRpIjoiNmRjYTdkN2YtNzAxZC00MjNiLTg1ZTctYWY3MzI1NDFiZjg4IiwiY2xpZW50X2lkIjoiYXBsaWNhdGllIn0.OEaw0DdoWMdM1zasWtTj2QhEVyXW4kXX22vrBOmKjxk",
    "expires_in": 43199,
    "scope": "write",
    "jti": "9770c790-2423-433f-9e3f-0be8d2e74004"
}






JPA
JDBC
Mongo
JMS


angular springboot




tema:
	db
	jbdc sau jpa
	poate si mongo
	jms topic cu consumatori


	aplicatie facuta de noi




